{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17602\\\\Documents\\\\coding-exercises\\\\TODP\\\\blog-template\\\\src\\\\components\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostDetails() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Access the route parameter\n  const [data, setData] = useState();\n  const [commentData, setCommentData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const currentUserToken = localStorage.getItem('token');\n  const deleteComment = async data => {\n    try {\n      const response = await fetch(`http://localhost:3000/posts/${id}/comments/${data._id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: currentUserToken // Set your headers if needed\n          // Add any other necessary headers\n        }\n        // You can include a body for some DELETE requests, but it's often not required\n        // body: JSON.stringify({ /* any data if needed */ }),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Handle success if needed\n      console.log('Item deleted successfully');\n      navigate(\"/posts/\" + id);\n    } catch (error) {\n      // Handle error if any\n      console.error('There was a problem deleting the item:', error);\n    }\n  };\n  const deletePost = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:3000/posts/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: currentUserToken // Set your headers if needed\n          // Add any other necessary headers\n        }\n        // You can include a body for some DELETE requests, but it's often not required\n        // body: JSON.stringify({ /* any data if needed */ }),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Handle success if needed\n      console.log('Item deleted successfully');\n      navigate(\"/\");\n    } catch (error) {\n      // Handle error if any\n      console.error('There was a problem deleting the item:', error);\n    }\n  };\n  const ChangeRouteToUpdatePostForm = id => {\n    navigate(\"/update-posts/\" + id);\n  };\n  const ChangeRouteToCommentForm = id => {\n    navigate(\"/comment-form/\" + id);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/posts/' + id + '/comments');\n        if (!response.ok) {\n          throw new Error('Network response was not ok.');\n        }\n        const resultComments = await response.json();\n        setCommentData(resultComments.comments);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/posts/' + id);\n        if (!response.ok) {\n          throw new Error('Network response was not ok.');\n        }\n        const result = await response.json();\n        setIsLoading(true);\n        setData(result.post);\n      } catch (error) {\n        setIsLoading(true);\n        setError(error);\n      }\n    };\n    fetchData();\n  }, [error, id, isLoading]);\n  let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  let temp = \"\";\n  if (currentUser !== null && typeof currentUser === 'object') {\n    temp = currentUser.userData.username;\n  } else {\n    temp = \"\";\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"By: \", data.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), data.author.username === temp ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => ChangeRouteToUpdatePostForm(id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), temp ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => ChangeRouteToCommentForm(id),\n        className: \"comment-button\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), commentData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [\"By: \", data.user_ref.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteComment(data),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this);\n  }\n}\n_s(PostDetails, \"4Edq1eG5oG7uUmsbNjydu8j5gt8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetails","_s","navigate","id","data","setData","commentData","setCommentData","isLoading","setIsLoading","error","setError","currentUserToken","localStorage","getItem","deleteComment","response","fetch","_id","method","headers","Authorization","ok","Error","console","log","deletePost","e","preventDefault","ChangeRouteToUpdatePostForm","ChangeRouteToCommentForm","fetchData","resultComments","json","comments","result","post","currentUser","JSON","parse","temp","userData","username","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","title","author","content","onClick","map","comment","user_ref","_c","$RefreshReg$"],"sources":["C:/Users/17602/Documents/coding-exercises/TODP/blog-template/src/components/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function PostDetails() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Access the route parameter\r\n  const [data, setData] = useState();\r\n  const [commentData, setCommentData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const currentUserToken = localStorage.getItem('token');\r\n  \r\n  const deleteComment = async (data) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/posts/${id}/comments/${data._id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json', \r\n          Authorization: currentUserToken // Set your headers if needed\r\n          // Add any other necessary headers\r\n        },\r\n        // You can include a body for some DELETE requests, but it's often not required\r\n        // body: JSON.stringify({ /* any data if needed */ }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      // Handle success if needed\r\n      console.log('Item deleted successfully');\r\n      navigate(\"/posts/\"+id);\r\n    } catch(error) {\r\n      // Handle error if any\r\n      console.error('There was a problem deleting the item:', error);\r\n    }\r\n  };\r\n\r\n  const deletePost = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/posts/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json', \r\n          Authorization: currentUserToken // Set your headers if needed\r\n          // Add any other necessary headers\r\n        },\r\n        // You can include a body for some DELETE requests, but it's often not required\r\n        // body: JSON.stringify({ /* any data if needed */ }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      // Handle success if needed\r\n      console.log('Item deleted successfully');\r\n      navigate(\"/\");\r\n    } catch(error) {\r\n      // Handle error if any\r\n      console.error('There was a problem deleting the item:', error);\r\n    }\r\n  };\r\n\r\n  const ChangeRouteToUpdatePostForm = (id) => {\r\n    navigate(\"/update-posts/\"+id);\r\n  }\r\n  const ChangeRouteToCommentForm = (id) => {\r\n    navigate(\"/comment-form/\"+id);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/posts/'+id+'/comments');\r\n        if (!response.ok) {\r\n           throw new Error('Network response was not ok.');\r\n        }\r\n        const resultComments = await response.json();\r\n        setCommentData(resultComments.comments);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/posts/'+id);\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n        const result = await response.json();\r\n        setIsLoading(true);\r\n        setData(result.post);\r\n      } catch (error) {\r\n        setIsLoading(true);\r\n        setError(error);\r\n      } \r\n    };\r\n\r\n    fetchData();\r\n  }, [error, id, isLoading]);\r\n\r\n  let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  let temp = \"\"\r\n  if (currentUser !== null && typeof currentUser === 'object') {\r\n    temp = currentUser.userData.username;\r\n  } else {\r\n    temp = \"\";\r\n  }\r\n  \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoading) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n  return (\r\n    <div className=\"post-details-container\">\r\n      \r\n      <h2>{data.title}</h2>\r\n      <h4>By: {data.author.username}</h4>\r\n      <p>{data.content}</p>\r\n      \r\n        {(data.author.username === temp) ?\r\n          <div className=\"buttons-container\">\r\n            <button onClick={() => ChangeRouteToUpdatePostForm(id)}>Update</button>\r\n            <button onClick={deletePost}>Delete</button>\r\n          </div> :\r\n          <></>\r\n        }\r\n      {(temp) ?\r\n        <button onClick={() => ChangeRouteToCommentForm(id)} className=\"comment-button\">Comment</button>\r\n        :\r\n        <></>\r\n      }\r\n      <div className=\"comments-container\">\r\n      <h3>Comments:</h3>\r\n        {commentData.map((data) => (\r\n          <div className=\"comment-container\">\r\n            <p>{data.comment}</p>\r\n            <em>By: {data.user_ref.username}</em>\r\n            <div className=\"comment-button-container\">\r\n              <button>Update</button>\r\n              <button onClick={() => deleteComment(data)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n        }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}