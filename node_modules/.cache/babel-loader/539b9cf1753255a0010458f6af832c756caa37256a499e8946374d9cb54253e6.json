{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17602\\\\Documents\\\\coding-exercises\\\\TODP\\\\blog-template\\\\src\\\\components\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostDetails() {\n  _s();\n  const {\n    id\n  } = useParams(); // Access the route parameter\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/posts');\n        if (!response.ok) {\n          throw new Error('Network response was not ok.');\n        }\n        const result = await response.json();\n        const currentPost = result.posts.filter(e => {\n          if (e._id === id) {\n            return e;\n          } else {\n            return error;\n          }\n        });\n        setData(currentPost[0]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  const currentUser = localStorage.getItem('currentUser');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-details-container\",\n    children: [console.log({\n      currentUser\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"By: \", data.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), data.author.username === currentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetails, \"PvwjeX5VS8Rj+rAnVs7Mc322J+I=\", false, function () {\n  return [useParams];\n});\n_c = PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetails","_s","id","data","setData","isLoading","setIsLoading","error","setError","fetchData","response","fetch","ok","Error","result","json","currentPost","posts","filter","e","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","message","currentUser","localStorage","getItem","className","console","log","title","author","username","content","_c","$RefreshReg$"],"sources":["C:/Users/17602/Documents/coding-exercises/TODP/blog-template/src/components/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function PostDetails() {\r\n  const { id } = useParams(); // Access the route parameter\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/posts');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n        const result = await response.json();\r\n        const currentPost = result.posts.filter((e) => {\r\n          if (e._id === id) {\r\n            return e;\r\n          } else {\r\n            return error;\r\n          }\r\n        })\r\n        setData(currentPost[0]);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  });\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  const currentUser = localStorage.getItem('currentUser');\r\n\r\n  return (\r\n    <div className=\"post-details-container\">\r\n      {console.log({currentUser})}\r\n      <h2>{data.title}</h2>\r\n      <h4>By: {data.author.username}</h4>\r\n      <p>{data.content}</p>\r\n      {(data.author.username === currentUser) ?\r\n        <>\r\n          <button>Delete</button>\r\n          <button>Update</button>\r\n        </> :\r\n        <></>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}