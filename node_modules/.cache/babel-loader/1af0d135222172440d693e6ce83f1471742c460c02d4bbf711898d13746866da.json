{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17602\\\\Documents\\\\coding-exercises\\\\TODP\\\\blog-template\\\\src\\\\components\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostDetails() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Access the route parameter\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const currentUserToken = localStorage.getItem('token');\n  const deletePost = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:3000/posts/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: currentUserToken // Set your headers if needed\n          // Add any other necessary headers\n        }\n        // You can include a body for some DELETE requests, but it's often not required\n        // body: JSON.stringify({ /* any data if needed */ }),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Handle success if needed\n      console.log('Item deleted successfully');\n      navigate(\"/\");\n    } catch (error) {\n      // Handle error if any\n      console.error('There was a problem deleting the item:', error);\n    }\n  };\n  const ChangeRouteToUpdatePostForm = id => {\n    navigate(\"/update-posts/\" + id);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/posts');\n        if (!response.ok) {\n          throw new Error('Network response was not ok.');\n        }\n        const result = await response.json();\n        const currentPost = result.posts.filter(e => {\n          if (e._id === id) {\n            return e;\n          } else {\n            return error;\n          }\n        });\n        setData(currentPost[0]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [error, id]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  console.log(currentUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"By: \", data.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), data.author.username === currentUser.userData.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => ChangeRouteToUpdatePostForm(id),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deletePost,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), currentUser.userData.username ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetails, \"OnCWr+rnyVohVVWhm7HDC7BX8ns=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetails","_s","navigate","id","data","setData","isLoading","setIsLoading","error","setError","currentUserToken","localStorage","getItem","deletePost","e","preventDefault","response","fetch","method","headers","Authorization","ok","Error","console","log","ChangeRouteToUpdatePostForm","fetchData","result","json","currentPost","posts","filter","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","message","currentUser","JSON","parse","className","title","author","username","content","userData","onClick","_c","$RefreshReg$"],"sources":["C:/Users/17602/Documents/coding-exercises/TODP/blog-template/src/components/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function PostDetails() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Access the route parameter\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const currentUserToken = localStorage.getItem('token');\r\n  \r\n  const deletePost = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/posts/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json', \r\n          Authorization: currentUserToken // Set your headers if needed\r\n          // Add any other necessary headers\r\n        },\r\n        // You can include a body for some DELETE requests, but it's often not required\r\n        // body: JSON.stringify({ /* any data if needed */ }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      // Handle success if needed\r\n      console.log('Item deleted successfully');\r\n      navigate(\"/\");\r\n    } catch(error) {\r\n      // Handle error if any\r\n      console.error('There was a problem deleting the item:', error);\r\n    }\r\n  };\r\n\r\n  const ChangeRouteToUpdatePostForm = (id) => {\r\n    navigate(\"/update-posts/\"+id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/posts');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n        const result = await response.json();\r\n        const currentPost = result.posts.filter((e) => {\r\n          if (e._id === id) {\r\n            return e;\r\n          } else {\r\n            return error;\r\n          }\r\n        })\r\n        setData(currentPost[0]);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [error, id]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  console.log(currentUser)\r\n  return (\r\n    <div className=\"post-details-container\">\r\n      \r\n      <h2>{data.title}</h2>\r\n      <h4>By: {data.author.username}</h4>\r\n      <p>{data.content}</p>\r\n      {(data.author.username === currentUser.userData.username) ?\r\n        <div className=\"buttons-container\">\r\n          <button onClick={() => ChangeRouteToUpdatePostForm(id)}>Update</button>\r\n          <button onClick={deletePost}>Delete</button>\r\n        </div> :\r\n        <></>\r\n      }\r\n      {(currentUser.userData.username) ?\r\n        <button>Comment</button>\r\n        :\r\n        <></>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMkB,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEtD,MAAMC,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8Bd,EAAG,EAAC,EAAE;QAChEe,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAEV,gBAAgB,CAAC;UAChC;QACF;QACA;QACA;MACF,CAAC,CAAC;MACF,IAAI,CAACM,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCtB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAMM,KAAK,EAAE;MACb;MACAe,OAAO,CAACf,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAED,MAAMiB,2BAA2B,GAAItB,EAAE,IAAK;IAC1CD,QAAQ,CAAC,gBAAgB,GAACC,EAAE,CAAC;EAC/B,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMiC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,IAAI,CAACD,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA,MAAMK,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACpC,MAAMC,WAAW,GAAGF,MAAM,CAACG,KAAK,CAACC,MAAM,CAAEjB,CAAC,IAAK;UAC7C,IAAIA,CAAC,CAACkB,GAAG,KAAK7B,EAAE,EAAE;YAChB,OAAOW,CAAC;UACV,CAAC,MAAM;YACL,OAAON,KAAK;UACd;QACF,CAAC,CAAC;QACFH,OAAO,CAACwB,WAAW,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOrB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,SAAS;QACRD,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDmB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAAClB,KAAK,EAAEL,EAAE,CAAC,CAAC;EAEf,IAAIG,SAAS,EAAE;IACb,oBAAOT,OAAA;MAAAoC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI7B,KAAK,EAAE;IACT,oBAAOX,OAAA;MAAAoC,QAAA,GAAK,SAAO,EAACzB,KAAK,CAAC8B,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C;EAEA,MAAME,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAC9B,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;EACnEW,OAAO,CAACC,GAAG,CAACe,WAAW,CAAC;EACxB,oBACE1C,OAAA;IAAK6C,SAAS,EAAC,wBAAwB;IAAAT,QAAA,gBAErCpC,OAAA;MAAAoC,QAAA,EAAK7B,IAAI,CAACuC;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBxC,OAAA;MAAAoC,QAAA,GAAI,MAAI,EAAC7B,IAAI,CAACwC,MAAM,CAACC,QAAQ;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnCxC,OAAA;MAAAoC,QAAA,EAAI7B,IAAI,CAAC0C;IAAO;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBjC,IAAI,CAACwC,MAAM,CAACC,QAAQ,KAAKN,WAAW,CAACQ,QAAQ,CAACF,QAAQ,gBACtDhD,OAAA;MAAK6C,SAAS,EAAC,mBAAmB;MAAAT,QAAA,gBAChCpC,OAAA;QAAQmD,OAAO,EAAEA,CAAA,KAAMvB,2BAA2B,CAACtB,EAAE,CAAE;QAAA8B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvExC,OAAA;QAAQmD,OAAO,EAAEnC,UAAW;QAAAoB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,gBACNxC,OAAA,CAAAE,SAAA,mBAAI,CAAC,EAELwC,WAAW,CAACQ,QAAQ,CAACF,QAAQ,gBAC7BhD,OAAA;MAAAoC,QAAA,EAAQ;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAExBxC,OAAA,CAAAE,SAAA,mBAAI,CAAC;EAAA;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAACpC,EAAA,CA7FuBD,WAAW;EAAA,QAChBL,WAAW,EACbD,SAAS;AAAA;AAAAuD,EAAA,GAFFjD,WAAW;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}