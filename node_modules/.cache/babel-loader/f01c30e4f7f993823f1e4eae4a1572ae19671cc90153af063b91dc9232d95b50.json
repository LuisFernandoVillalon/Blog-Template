{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useParams}from'react-router-dom';import'../style/style.css';import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function UpdatePostForm(){const{id,commentid}=useParams();// Access the route parameter\nconst[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();const currentUserToken=localStorage.getItem('token');const[postData,setPostData]=useState({comment:''});useEffect(()=>{const fetchData=async()=>{try{const response=await fetch('http://localhost:3000/posts/'+id+'/comments');if(!response.ok){throw new Error('Network response was not ok.');}const result=await response.json();const currentPost=result.comments.filter(e=>{if(e._id===commentid){return e;}else{return error;}});console.log(currentPost[0]);setPostData(currentPost[0]);}catch(error){setError(error);}finally{setIsLoading(false);}};fetchData();},[error,id,commentid]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error.message]});}const handleInputChange=e=>{const{name,value}=e.target;setPostData({...postData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();try{const response=await fetch('http://localhost:3000/posts/'+id+'/comments/'+commentid,{method:'PUT',headers:{'Content-Type':'application/json',Authorization:currentUserToken},body:JSON.stringify(postData)});if(!response.ok){throw new Error('Network response was not ok.');}// Handle success if needed\nnavigate(\"/posts/\"+id);}catch(error){console.error('Error posting data:',error);// Handle error state if needed\n}};return/*#__PURE__*/_jsxs(\"div\",{class:\"form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Update Comment\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,class:\"log-in-container\",action:\"/create-comment\",method:\"POST\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"label-input-container\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"comment\",children:\"Comment\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"comment\",name:\"comment\",rows:\"4\",cols:\"50\",onChange:handleInputChange,value:postData.comment})]}),/*#__PURE__*/_jsx(\"button\",{class:\"submit-button\",children:\"Submit\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsx","_jsx","jsxs","_jsxs","UpdatePostForm","id","commentid","isLoading","setIsLoading","error","setError","navigate","currentUserToken","localStorage","getItem","postData","setPostData","comment","fetchData","response","fetch","ok","Error","result","json","currentPost","comments","filter","e","_id","console","log","children","message","handleInputChange","name","value","target","handleSubmit","preventDefault","method","headers","Authorization","body","JSON","stringify","class","onSubmit","action","for","rows","cols","onChange"],"sources":["C:/Users/17602/Documents/coding-exercises/TODP/Blog-Template/src/components/UpdateCommentForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport '../style/style.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UpdatePostForm() {\r\n    const { id, commentid } = useParams(); // Access the route parameter\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const currentUserToken = localStorage.getItem('token');\r\n    const [postData, setPostData] = useState({\r\n        comment: '',\r\n    });\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            const response = await fetch('http://localhost:3000/posts/'+id+'/comments');\r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok.');\r\n            }\r\n            const result = await response.json();\r\n            const currentPost = result.comments.filter((e) => {\r\n              if (e._id === commentid) {\r\n                return e;\r\n              } else {\r\n                return error;\r\n              }\r\n            })\r\n            console.log(currentPost[0])\r\n            setPostData(currentPost[0]);\r\n          } catch (error) {\r\n            setError(error);\r\n          } finally {\r\n            setIsLoading(false);\r\n          }\r\n        };\r\n    \r\n        fetchData();\r\n      }, [error, id, commentid]);\r\n    \r\n      if (isLoading) {\r\n        return <div>Loading...</div>;\r\n      }\r\n    \r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPostData({ ...postData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n          const response = await fetch('http://localhost:3000/posts/'+id+'/comments/'+commentid, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: currentUserToken\r\n            },\r\n            body: JSON.stringify(postData),\r\n          });\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok.');\r\n          }\r\n          // Handle success if needed\r\n          navigate(\"/posts/\"+id);\r\n        } catch (error) {\r\n          console.error('Error posting data:', error);\r\n          // Handle error state if needed\r\n        }\r\n      };\r\n\r\n    return (\r\n\r\n        <div class=\"form-container\">\r\n            <h1>Update Comment</h1>\r\n                <form onSubmit={handleSubmit} class=\"log-in-container\" action=\"/create-comment\" method=\"POST\">\r\n\r\n                    <div class=\"label-input-container\">\r\n                        <label for=\"comment\">Comment</label>\r\n                        <textarea\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            rows=\"4\"\r\n                            cols=\"50\"\r\n                            onChange={handleInputChange}\r\n                            value={postData.comment}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n\r\n                    <button class=\"submit-button\">\r\n                        Submit\r\n                    </button>\r\n\r\n                </form>\r\n        </div>\t\r\n\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}