{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17602\\\\Documents\\\\coding-exercises\\\\TODP\\\\blog-template\\\\src\\\\components\\\\UpdateCommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport '../style/style.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePostForm() {\n  _s();\n  const {\n    id\n  } = useParams(); // Access the route parameter\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const currentUserToken = localStorage.getItem('token');\n  const [postData, setPostData] = useState({\n    comment: ''\n  });\n\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //       try {\n  //         const response = await fetch('http://localhost:3000/posts');\n  //         if (!response.ok) {\n  //           throw new Error('Network response was not ok.');\n  //         }\n  //         const result = await response.json();\n  //         const currentPost = result.posts.filter((e) => {\n  //           if (e._id === id) {\n  //             return e;\n  //           } else {\n  //             return error;\n  //           }\n  //         })\n  //         setPostData(currentPost[0]);\n  //       } catch (error) {\n  //         setError(error);\n  //       } finally {\n  //         setIsLoading(false);\n  //       }\n  //     };\n\n  //     fetchData();\n  //   }, [error, id]);\n\n  //   if (isLoading) {\n  //     return <div>Loading...</div>;\n  //   }\n\n  //   if (error) {\n  //     return <div>Error: {error.message}</div>;\n  //   }\n\n  // const handleInputChange = (e) => {\n  //     const { name, value } = e.target;\n  //     setPostData({ ...postData, [name]: value });\n  // };\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     try {\n  //       const response = await fetch('http://localhost:3000/posts/'+id, {\n  //         method: 'PUT',\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //           Authorization: currentUserToken\n  //         },\n  //         body: JSON.stringify(postData),\n  //       });\n  //       if (!response.ok) {\n  //         throw new Error('Network response was not ok.');\n  //       }\n  //       // Handle success if needed\n  //       navigate(\"/posts/\"+id);\n  //     } catch (error) {\n  //       console.error('Error posting data:', error);\n  //       // Handle error state if needed\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      class: \"log-in-container\",\n      action: \"/create-comment\",\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"label-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"comment\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          name: \"comment\",\n          rows: \"4\",\n          cols: \"50\",\n          onChange: handleInputChange,\n          value: postData.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdatePostForm, \"rsA12vYXHf6a9ZquAkp0r9FaMLY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdatePostForm;\nvar _c;\n$RefreshReg$(_c, \"UpdatePostForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","UpdatePostForm","_s","id","isLoading","setIsLoading","error","setError","navigate","currentUserToken","localStorage","getItem","postData","setPostData","comment","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","action","method","for","name","rows","cols","onChange","handleInputChange","value","_c","$RefreshReg$"],"sources":["C:/Users/17602/Documents/coding-exercises/TODP/blog-template/src/components/UpdateCommentForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport '../style/style.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UpdatePostForm() {\r\n    const { id } = useParams(); // Access the route parameter\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const currentUserToken = localStorage.getItem('token');\r\n    const [postData, setPostData] = useState({\r\n        comment: '',\r\n    });\r\n    \r\n    // useEffect(() => {\r\n    //     const fetchData = async () => {\r\n    //       try {\r\n    //         const response = await fetch('http://localhost:3000/posts');\r\n    //         if (!response.ok) {\r\n    //           throw new Error('Network response was not ok.');\r\n    //         }\r\n    //         const result = await response.json();\r\n    //         const currentPost = result.posts.filter((e) => {\r\n    //           if (e._id === id) {\r\n    //             return e;\r\n    //           } else {\r\n    //             return error;\r\n    //           }\r\n    //         })\r\n    //         setPostData(currentPost[0]);\r\n    //       } catch (error) {\r\n    //         setError(error);\r\n    //       } finally {\r\n    //         setIsLoading(false);\r\n    //       }\r\n    //     };\r\n    \r\n    //     fetchData();\r\n    //   }, [error, id]);\r\n    \r\n    //   if (isLoading) {\r\n    //     return <div>Loading...</div>;\r\n    //   }\r\n    \r\n    //   if (error) {\r\n    //     return <div>Error: {error.message}</div>;\r\n    //   }\r\n\r\n    // const handleInputChange = (e) => {\r\n    //     const { name, value } = e.target;\r\n    //     setPostData({ ...postData, [name]: value });\r\n    // };\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     try {\r\n    //       const response = await fetch('http://localhost:3000/posts/'+id, {\r\n    //         method: 'PUT',\r\n    //         headers: {\r\n    //           'Content-Type': 'application/json',\r\n    //           Authorization: currentUserToken\r\n    //         },\r\n    //         body: JSON.stringify(postData),\r\n    //       });\r\n    //       if (!response.ok) {\r\n    //         throw new Error('Network response was not ok.');\r\n    //       }\r\n    //       // Handle success if needed\r\n    //       navigate(\"/posts/\"+id);\r\n    //     } catch (error) {\r\n    //       console.error('Error posting data:', error);\r\n    //       // Handle error state if needed\r\n    //     }\r\n    //   };\r\n\r\n    return (\r\n\r\n        <div class=\"form-container\">\r\n            <h1>Update Comment</h1>\r\n                <form onSubmit={handleSubmit} class=\"log-in-container\" action=\"/create-comment\" method=\"POST\">\r\n\r\n                    <div class=\"label-input-container\">\r\n                        <label for=\"comment\">Comment</label>\r\n                        <textarea\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            rows=\"4\"\r\n                            cols=\"50\"\r\n                            onChange={handleInputChange}\r\n                            value={postData.comment}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n\r\n                    <button class=\"submit-button\">\r\n                        Submit\r\n                    </button>\r\n\r\n                </form>\r\n        </div>\t\r\n\r\n    )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,oBAAoB;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMa,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IACrCmB,OAAO,EAAE;EACb,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAEId,OAAA;IAAKe,KAAK,EAAC,gBAAgB;IAAAC,QAAA,gBACvBhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBpB,OAAA;MAAMqB,QAAQ,EAAEC,YAAa;MAACP,KAAK,EAAC,kBAAkB;MAACQ,MAAM,EAAC,iBAAiB;MAACC,MAAM,EAAC,MAAM;MAAAR,QAAA,gBAEzFhB,OAAA;QAAKe,KAAK,EAAC,uBAAuB;QAAAC,QAAA,gBAC9BhB,OAAA;UAAOyB,GAAG,EAAC,SAAS;UAAAT,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCpB,OAAA;UACIG,EAAE,EAAC,SAAS;UACZuB,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,GAAG;UACRC,IAAI,EAAC,IAAI;UACTC,QAAQ,EAAEC,iBAAkB;UAC5BC,KAAK,EAAEnB,QAAQ,CAACE;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAENpB,OAAA;QAAQe,KAAK,EAAC,eAAe;QAAAC,QAAA,EAAC;MAE9B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAGd;AAAClB,EAAA,CAlGuBD,cAAc;EAAA,QACnBJ,SAAS,EAGPC,WAAW;AAAA;AAAAkC,EAAA,GAJR/B,cAAc;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}