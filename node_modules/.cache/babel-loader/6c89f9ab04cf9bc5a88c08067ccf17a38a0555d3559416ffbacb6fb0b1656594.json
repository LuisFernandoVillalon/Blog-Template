{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17602\\\\Documents\\\\coding-exercises\\\\TODP\\\\blog-template\\\\src\\\\components\\\\PostDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostDetails() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Access the route parameter\n  const [data, setData] = useState();\n  const [commentData, setCommentData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const currentUserToken = localStorage.getItem('token');\n  const deleteComment = async data => {\n    try {\n      const response = await fetch(`http://localhost:3000/posts/${id}/comments/${data._id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: currentUserToken // Set your headers if needed\n          // Add any other necessary headers\n        }\n        // You can include a body for some DELETE requests, but it's often not required\n        // body: JSON.stringify({ /* any data if needed */ }),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Handle success if needed\n      console.log('Item deleted successfully');\n      window.location.reload();\n    } catch (error) {\n      // Handle error if any\n      console.error('There was a problem deleting the item:', error);\n    }\n  };\n  const deletePost = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:3000/posts/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: currentUserToken // Set your headers if needed\n          // Add any other necessary headers\n        }\n        // You can include a body for some DELETE requests, but it's often not required\n        // body: JSON.stringify({ /* any data if needed */ }),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      // Handle success if needed\n      console.log('Item deleted successfully');\n      navigate(\"/\");\n    } catch (error) {\n      // Handle error if any\n      console.error('There was a problem deleting the item:', error);\n    }\n  };\n  const ChangeRouteToUpdatePostForm = id => {\n    navigate(\"/update-posts/\" + id);\n  };\n  const ChangeRouteToUpdateCommentForm = data => {\n    navigate(\"/update-comments/\" + data._id);\n  };\n  const ChangeRouteToCommentForm = id => {\n    navigate(\"/comment-form/\" + id);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/posts/' + id + '/comments');\n        if (!response.ok) {\n          throw new Error('Network response was not ok.');\n        }\n        const resultComments = await response.json();\n        setCommentData(resultComments.comments);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/posts/' + id);\n        if (!response.ok) {\n          throw new Error('Network response was not ok.');\n        }\n        const result = await response.json();\n        setIsLoading(true);\n        setData(result.post);\n      } catch (error) {\n        setIsLoading(true);\n        setError(error);\n      }\n    };\n    fetchData();\n  }, [error, id, isLoading]);\n  let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  let temp = \"\";\n  if (currentUser !== null && typeof currentUser === 'object') {\n    temp = currentUser.userData.username;\n  } else {\n    temp = \"\";\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"By: \", data.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), data.author.username === temp ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => ChangeRouteToUpdatePostForm(id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), temp ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => ChangeRouteToCommentForm(id),\n        className: \"comment-button\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this), commentData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [\"By: \", data.user_ref.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), data.user_ref.username === temp ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => ChangeRouteToUpdateCommentForm(data),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteComment(data),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this);\n  }\n}\n_s(PostDetails, \"4Edq1eG5oG7uUmsbNjydu8j5gt8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PostDetails;\nvar _c;\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetails","_s","navigate","id","data","setData","commentData","setCommentData","isLoading","setIsLoading","error","setError","currentUserToken","localStorage","getItem","deleteComment","response","fetch","_id","method","headers","Authorization","ok","Error","console","log","window","location","reload","deletePost","e","preventDefault","ChangeRouteToUpdatePostForm","ChangeRouteToUpdateCommentForm","ChangeRouteToCommentForm","fetchData","resultComments","json","comments","result","post","currentUser","JSON","parse","temp","userData","username","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","title","author","content","onClick","map","comment","user_ref","_c","$RefreshReg$"],"sources":["C:/Users/17602/Documents/coding-exercises/TODP/blog-template/src/components/PostDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function PostDetails() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams(); // Access the route parameter\r\n  const [data, setData] = useState();\r\n  const [commentData, setCommentData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const currentUserToken = localStorage.getItem('token');\r\n  \r\n  const deleteComment = async (data) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/posts/${id}/comments/${data._id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json', \r\n          Authorization: currentUserToken // Set your headers if needed\r\n          // Add any other necessary headers\r\n        },\r\n        // You can include a body for some DELETE requests, but it's often not required\r\n        // body: JSON.stringify({ /* any data if needed */ }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      // Handle success if needed\r\n      console.log('Item deleted successfully');\r\n      window.location.reload();\r\n    } catch(error) {\r\n      // Handle error if any\r\n      console.error('There was a problem deleting the item:', error);\r\n    }\r\n  };\r\n\r\n  const deletePost = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/posts/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json', \r\n          Authorization: currentUserToken // Set your headers if needed\r\n          // Add any other necessary headers\r\n        },\r\n        // You can include a body for some DELETE requests, but it's often not required\r\n        // body: JSON.stringify({ /* any data if needed */ }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      // Handle success if needed\r\n      console.log('Item deleted successfully');\r\n      navigate(\"/\");\r\n    } catch(error) {\r\n      // Handle error if any\r\n      console.error('There was a problem deleting the item:', error);\r\n    }\r\n  };\r\n\r\n  const ChangeRouteToUpdatePostForm = (id) => {\r\n    navigate(\"/update-posts/\"+id);\r\n  }\r\n  const ChangeRouteToUpdateCommentForm = (data) => {\r\n    navigate(\"/update-comments/\"+data._id);\r\n  }\r\n  const ChangeRouteToCommentForm = (id) => {\r\n    navigate(\"/comment-form/\"+id);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/posts/'+id+'/comments');\r\n        if (!response.ok) {\r\n           throw new Error('Network response was not ok.');\r\n        }\r\n        const resultComments = await response.json();\r\n        setCommentData(resultComments.comments);\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/posts/'+id);\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n        const result = await response.json();\r\n        setIsLoading(true);\r\n        setData(result.post);\r\n      } catch (error) {\r\n        setIsLoading(true);\r\n        setError(error);\r\n      } \r\n    };\r\n\r\n    fetchData();\r\n  }, [error, id, isLoading]);\r\n\r\n  let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  let temp = \"\"\r\n  if (currentUser !== null && typeof currentUser === 'object') {\r\n    temp = currentUser.userData.username;\r\n  } else {\r\n    temp = \"\";\r\n  }\r\n  \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoading) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n  return (\r\n    <div className=\"post-details-container\">\r\n      \r\n      <h2>{data.title}</h2>\r\n      <h4>By: {data.author.username}</h4>\r\n      <p>{data.content}</p>\r\n      \r\n        {(data.author.username === temp) ?\r\n          <div className=\"buttons-container\">\r\n            <button onClick={() => ChangeRouteToUpdatePostForm(id)}>Update</button>\r\n            <button onClick={deletePost}>Delete</button>\r\n          </div> :\r\n          <></>\r\n        }\r\n      {(temp) ?\r\n        <button onClick={() => ChangeRouteToCommentForm(id)} className=\"comment-button\">Comment</button>\r\n        :\r\n        <></>\r\n      }\r\n      <div className=\"comments-container\">\r\n      <h3>Comments:</h3>\r\n        {commentData.map((data) => (\r\n          <div className=\"comment-container\">\r\n            <p>{data.comment}</p>\r\n            <em>By: {data.user_ref.username}</em>\r\n            {(data.user_ref.username === temp) ?\r\n              <div className=\"comment-button-container\">\r\n                <button onClick={() => ChangeRouteToUpdateCommentForm(data)}>Update</button>\r\n                <button onClick={() => deleteComment(data)}>Delete</button>\r\n              </div> :\r\n              <></>\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n        }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}